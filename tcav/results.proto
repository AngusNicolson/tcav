syntax = "proto2";

package tcav.tcav;

message Result {

  // contains the accuracies of the learned classifier
  // for both positive and negative examples
  message CAVaccuracies {
    required float positive_set_accuracy = 1;
    required float negative_set_accuracy = 2;
    required float overall_accuracy = 3;
  }

  //
  required string cav_key = 1;

  // positive and negative concept sets
  required string cav_concept = 2;
  required string negative_concept = 3;

  // target class of the output layer
  required string target_class = 4;

  required CAVaccuracies cav_accuracies = 5;

  // CAV computation values
  required float i_up = 6;
  required float val_directional_dirs_abs_mean = 7;
  required float val_directional_dirs_mean = 8;
  required float val_directional_dirs_std = 9;
  repeated  float val_directional_dirs = 10;

  // alpha is the hyperparameter value used to train CAV
  // note is a string representation
  required string note = 11;
  required float alpha = 12;

  // name of the bottleneck layer
  required string bottleneck = 13;
}

message Results {
  repeated Result results = 1;
}
